<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.ecommerce.dao.UserMapper">
    <select id="getAllUser" resultType="com.project.ecommerce.dto.UserDto" fetchSize="200">
        SELECT * FROM users
    </select>

    <select id="findUserByUserName" resultType="com.project.ecommerce.dto.UserDto" fetchSize="200">
        SELECT * FROM users WHERE username = #{user_name}
    </select>

    <select id="findUserById" resultType="com.project.ecommerce.dto.UserDto" fetchSize="200">
        SELECT * FROM users WHERE id = #{userId}
    </select>

    <select id="findUserByEmail" resultType="com.project.ecommerce.dto.UserDto" fetchSize="200">
        SELECT * FROM users WHERE email = #{email} AND role = 'ROLE_USER'
    </select>
    <insert id="createUser" parameterType="com.project.ecommerce.dto.UserDto" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO users
            (
            username,
            password,
            fullname,
            role,
            email
            )
        VALUES
            (
             #{userName,jdbcType=VARCHAR},
             #{password,jdbcType=VARCHAR},
             #{fullName,jdbcType=VARCHAR},
             #{role,jdbcType=VARCHAR},
             #{email,jdbcType=VARCHAR}
            )
        <selectKey keyProperty="id" resultType="Long" order="AFTER">
            SELECT LAST_INSERT_ID();
        </selectKey>
    </insert>
    <update id="updateUser" parameterType="com.project.ecommerce.dto.UserDto">
        UPDATE users
        SET
            fullname = #{fullName},
            email = #{email},
            update_time = #{updateTime}
        WHERE username = #{userName}
    </update>
    <delete id="deleteUser" parameterType="Long">
        DELETE FROM users WHERE id = #{userId}
    </delete>

<!--=======================================================================================================================================-->

    <resultMap id="VendorResultMap" type="com.project.ecommerce.dto.VendorDto">
        <id property="id" column="id" />
        <result property="userName" column="username"/>
        <result property="fullName" column="vendor_name"/>
        <result property="phoneNumber" column="vendor_phone"/>
        <result property="addressDetail" column="vendor_address_detail"/>
        <result property="province" column="province"/>
        <result property="description" column="vendor_description"/>
        <result property="businessCode" column="business_code"/>
        <!--        <result property="categoryId" column="categoryId"/>-->
    </resultMap>

    <select id="findVendorByUserName" resultType="int" fetchSize="200">
        SELECT count(*) FROM users WHERE username = #{userName} AND role = 'ROLE_VENDOR'
    </select>

    <select id="findVendorByEmail" resultType="com.project.ecommerce.dto.UserDto" fetchSize="200">
        SELECT *
        FROM users
        WHERE email = #{email}
          AND role = 'ROLE_VENDOR'
    </select>

    <select id="findVendorExist" resultType="int" fetchSize="200">
        SELECT count(*)
        FROM users u
        INNER JOIN vendor_info vi on u.id = vi.vendorId
        <where>
            <if test="userName != null">
                AND username = #{userName}
            </if>
            <if test="email != null">
                AND email = #{email}
            </if>
            <if test="businessCode != null">
                AND business_code = #{businessCode}
            </if>
        </where>
    </select>

    <insert id="createVendor" parameterType="com.project.ecommerce.dto.VendorDto">
        INSERT INTO vendor_info
        (
            vendorId,
            vendor_name,
            vendor_phone,
            province,
            business_code,
            category,
            vendor_address_detail,
            description
        )
        VALUES
        (
            #{id,jdbcType=BIGINT},
            #{fullName,jdbcType=VARCHAR},
            #{phoneNumber,jdbcType=VARCHAR},
            #{province,jdbcType=INTEGER},
            #{businessCode,jdbcType=VARCHAR},
            #{categoryId,jdbcType=INTEGER},
            #{addressDetail,jdbcType=VARCHAR},
            #{description,jdbcType=VARCHAR}
        )
    </insert>

    <delete id="deleteVendor" parameterType="long">
        DELETE FROM vendor_info WHERE vendorId = #{vendorId}
    </delete>
</mapper>

