<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.ecommerce.dao.ProductMapper">
    <resultMap id="ProductResultMap" type="com.project.ecommerce.form.ProductForm">
        <id property="productId" column="id" />
        <result property="productName" column="productName"/>
        <result property="description" column="description"/>
        <result property="brand" column="brand"/>
        <result property="SKU" column="SKU"/>
        <result property="size" column="size"/>
        <result property="color" column="color"/>
        <result property="material" column="material"/>
        <result property="categoryId" column="categoryId"/>
        <result property="subCategoryId" column="subCategoryId"/>
        <result property="vendorId" column="vendorId"/>
        <result property="quantity" column="quantity"/>
        <result property="price" column="price"/>
        <result property="rating" column="rating"/>
        <result property="createdBy" column="createdBy"/>
        <result property="origin" column="origin"/>
        <result property="vendorName" column="vendorName"/>
        <result property="listPrice" column="listPrice"/>
        <result property="model" column="model"/>
        <result property="type" column="type"/>
        <result property="framePerSecond" column="framePerSecond"/>
        <result property="weight" column="weight"/>
        <result property="connectionPorts" column="connectionports"/>
        <result property="voltage" column="voltage"/>
        <result property="capacity" column="capacity"/>
        <result property="power" column="power"/>
        <result property="author" column="author"/>
        <result property="releaseDate" column="releaseDate"/>
        <result property="numberOfPages" column="numberOfPages"/>
        <result property="language" column="language"/>
        <result property="publisher" column="publisher"/>
        <result property="enable" column="enable"/>
    </resultMap>

    <resultMap id="VendorResultMap" type="com.project.ecommerce.form.VendorProductForm">
        <result property="vendorId" column="vendorId"/>
        <result property="productId" column="productId"/>
        <result property="quantity" column="quantity"/>
        <result property="price" column="price"/>
        <result property="rating" column="rating"/>
        <result property="fullName" column="vendorName"/>
    </resultMap>

    <insert id="insertProduct" parameterType="com.project.ecommerce.dto.ProductDto" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO product
        ( productName, description, categoryId, subCategoryId, brand,
         SKU,origin, createdBy, listPrice)
        VALUES
        (#{productName,jdbcType=VARCHAR},
         #{description,jdbcType=VARCHAR},
         #{categoryId,jdbcType=INTEGER},
         #{subCategoryId,jdbcType=INTEGER},
         #{brand,jdbcType=VARCHAR},
         #{SKU,jdbcType=VARCHAR},
         #{origin,jdbcType=VARCHAR},
         #{createdBy,jdbcType=BIGINT},
         #{listPrice,jdbcType=BIGINT});
        <selectKey keyProperty="id" resultType="long" order="AFTER">
            SELECT LAST_INSERT_ID();
        </selectKey>
    </insert>

    <insert id="insertVendorProduct" parameterType="com.project.ecommerce.dto.VendorProductDto">
        INSERT INTO vendor_product
        ( vendorId, productId, quantity, price, rating)
        VALUES
        (#{vendorId,jdbcType=BIGINT},
         #{productId,jdbcType=BIGINT},
         #{quantity,jdbcType=BIGINT},
         #{price,jdbcType=BIGINT},
         #{rating,jdbcType=INTEGER});
    </insert>

    <select id="getAllProductByVendorId" resultMap="ProductResultMap" fetchSize="200">
        SELECT * FROM vendor_product
        LEFT JOIN product p on vendor_product.productId = p.id
        WHERE vendorId = #{vendorId}
    </select>

    <select id="getVendorProduct" resultMap="ProductResultMap" fetchSize="200">
        SELECT * FROM vendor_product
        LEFT JOIN product p on vendor_product.productId = p.id
        WHERE productId = #{productId}
        AND vendorId = #{vendorId}
    </select>

    <update id="updateProduct" parameterType="com.project.ecommerce.form.ProductForm">
        UPDATE product
        SET productName = #{productName},
            description = #{description},
            brand = #{brand},
            SKU = #{SKU},
            listPrice = #{listPrice},
            categoryId = #{categoryId},
            subCategoryId = #{subCategoryId}
        WHERE id = #{productId} and createdBy = #{vendorId}
    </update>

    <update id="updateVendorProduct" parameterType="com.project.ecommerce.form.ProductForm">
        UPDATE vendor_product
        SET quantity = #{quantity},
            price = #{price}
        WHERE productId = #{productId};
    </update>

    <select id="getAllProduct" parameterType="map" resultMap="ProductResultMap" fetchSize="200">
        SELECT p.id, p.productName, p.categoryId, p.subCategoryId, p.listPrice,
               p.createdBy, p.created_time, p.origin, p.brand, p.SKU,
               vp.vendorId, vp.price, vp.quantity, vp.rating, vp.productId, vp.createdTime, vp.updatedTime, vp.enable,
               vi.vendorName
        FROM product p
        INNER JOIN
            ( SELECT v.vendorId, v.quantity, v.rating, v.price, v.productId, v.createdTime, v.updatedTime, v.enable
              FROM vendor_product v
              WHERE quantity > 0
              ORDER BY rating DESC, price ASC
            ) vp ON p.id = vp.productId
        INNER JOIN
            (SELECT vi.vendorName, vi.vendorId as vid FROM vendor_info vi) vi
                ON vi.vid = vp.vendorId
        <where>
            <if test="categoryId != null">
                AND categoryId = #{categoryId}
            </if>
            <if test="subCategoryId != null">
                AND subCategoryId = #{subCategoryId}
            </if>
            <if test="keyword != null">
                AND (productName LIKE #{keyword}
                    OR SKU LIKE #{keyword}
                       OR brand LIKE #{keyword})
            </if>
            <if test="enable != null">
                AND enable = #{enable}
            </if>
            <if test="vendorId != null">
                AND vendorId = #{vendorId}
            </if>
        </where>
    </select>

    <select id="getProductDetail" resultMap="ProductResultMap" fetchSize="200">
        SELECT * FROM
            (SELECT p.id, p.productName, p.brand, p.description, p.origin, p.SKU,
                    p.categoryId, p.subCategoryId, p.createdBy, p.listPrice,
                    vp.vendorId, vp.quantity, vp.price, vp.rating, vp.enable
             FROM  product p
                INNER JOIN vendor_product vp
                    ON p.id = vp.productId
             WHERE p.id = #{productId}
               AND vp.vendorId = #{vendorId} ) t1
        LEFT JOIN
                (SELECT vendorName, vendorId FROM vendor_info) t2
                 ON t1.vendorId = t2.vendorId;
    </select>

    <select id="getProductDetailExtend" resultMap="ProductResultMap" fetchSize="200">
        SELECT *
        FROM  product p
        WHERE p.id = #{productId}
    </select>

    <select id="getVendorListByProduct" resultMap="VendorResultMap" fetchSize="200">
        SELECT vp.vendorId, productId, quantity, price, rating, vendorName FROM vendor_product vp
        INNER JOIN vendor_info vi ON vp.vendorId = vi.vendorId
        WHERE productId = #{productId}
    </select>

    <insert id="saveProductImage" parameterType="com.project.ecommerce.dto.ProductImageDto" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO image
        ( name, productId, content, imageOrder)
        VALUES
        (#{name,jdbcType=VARCHAR},
         #{productId,jdbcType=BIGINT},
         #{content,jdbcType=BLOB},
         #{imageOrder,jdbcType=TINYINT});
    </insert>
    
    <select id="getProductImage" fetchSize="200" resultType="com.project.ecommerce.dto.ProductImageDto">
        SELECT * FROM image
        WHERE productId = #{productId}
        ORDER BY imageOrder
    </select>

    <select id="getProductCover" fetchSize="200" resultType="com.project.ecommerce.dto.ProductImageDto">
        SELECT * FROM image
        WHERE productId = #{productId}
        AND imageOrder = 1
        ORDER BY imageOrder
    </select>

    <update id="updateProductImage" parameterType="com.project.ecommerce.dto.ProductImageDto">
        UPDATE image
        SET name = #{name},
            content = #{content}
        WHERE id = #{id};
    </update>
    <delete id="removeProductImage">
        DELETE FROM image
        WHERE productId = #{productId}
            AND imageOrder = #{imageOrder}
    </delete>
    <update id="updateProductQuantity">
        UPDATE vendor_product
        SET quantity = #{quantity}
        WHERE productId = #{productId}
        AND vendorId = #{vendorId}
    </update>

    <select id="getCountries" resultType="com.project.ecommerce.dto.CountriesDto">
        SELECT * FROM countries ORDER BY name
    </select>

    <insert id="insertDetailCategory1" parameterType="com.project.ecommerce.form.ProductForm" useGeneratedKeys="true" keyColumn="id">
        INSERT INTO category1_fashion_detail
            (productid, size, material, color)
        VALUES
        (#{productId,jdbcType=BIGINT},
         #{size,jdbcType=VARCHAR},
         #{material,jdbcType=VARCHAR},
         #{color,jdbcType=VARCHAR});
    </insert>

    <insert id="insertDetailCategory2Sub1" parameterType="com.project.ecommerce.form.ProductForm" useGeneratedKeys="true" keyColumn="id">
        INSERT INTO category2_sub1_tivi_detail
            (productid, model, type, framepersecond, weight, connectionports, size, voltage)
        VALUES
        (#{productId,jdbcType=BIGINT},
         #{model,jdbcType=VARCHAR},
         #{type,jdbcType=VARCHAR},
         #{framePerSecond,jdbcType=VARCHAR},
         #{weight,jdbcType=VARCHAR},
         #{connectionPorts,jdbcType=VARCHAR},
         #{size,jdbcType=VARCHAR},
         #{voltage,jdbcType=VARCHAR});
    </insert>

    <insert id="insertDetailCategory2Sub2" parameterType="com.project.ecommerce.form.ProductForm" useGeneratedKeys="true" keyColumn="id">
        INSERT INTO category2_sub2_cooker_detail
        (productId, model, capacity, power, voltage)
        VALUES
        (#{productId,jdbcType=BIGINT},
         #{model,jdbcType=VARCHAR},
         #{capacity,jdbcType=VARCHAR},
         #{power,jdbcType=VARCHAR},
         #{voltage,jdbcType=VARCHAR});
    </insert>

    <insert id="insertDetailCategory2Sub3" parameterType="com.project.ecommerce.form.ProductForm" useGeneratedKeys="true" keyColumn="id">
        INSERT INTO category2_sub3_fridge_detail
        (productId, model, capacity, size, voltage)
        VALUES
        (#{productId,jdbcType=BIGINT},
         #{model,jdbcType=VARCHAR},
         #{capacity,jdbcType=VARCHAR},
         #{size,jdbcType=VARCHAR},
         #{voltage,jdbcType=VARCHAR});
    </insert>

    <insert id="insertDetailCategory3" parameterType="com.project.ecommerce.form.ProductForm" useGeneratedKeys="true" keyColumn="id">
        INSERT INTO category3_book_detail
            (productId, author, releaseDate, numberOfPages, language, publisher)
        VALUES
        (#{productId,jdbcType=BIGINT},
         #{author,jdbcType=VARCHAR},
         #{releaseDate,jdbcType=DATE},
         #{numberOfPages,jdbcType=INTEGER},
         #{language,jdbcType=VARCHAR},
         #{publisher,jdbcType=VARCHAR});
    </insert>

    <select id="getProductDetailBaseOnCategory" resultMap="ProductResultMap" parameterType="com.project.ecommerce.form.ProductForm">
        <if test="categoryId == 1">
            SELECT * FROM category1_fashion_detail
        </if>
        <if test="categoryId == 2 and subCategoryId == 1">
            SELECT * FROM category2_sub1_tivi_detail
        </if>
        <if test="categoryId == 2 and subCategoryId == 2">
            SELECT * FROM category2_sub2_cooker_detail
        </if>
        <if test="categoryId == 2 and subCategoryId == 3">
            SELECT * FROM category2_sub3_fridge_detail
        </if>
        <if test="categoryId == 3">
            SELECT * FROM category3_book_detail
        </if>
        WHERE productId = #{productId}
    </select>

    <select id="getProductQuantity" resultType="long">
        SELECT quantity
        FROM vendor_product
        WHERE productId = #{productId}
            AND vendorId = #{vendorId}
    </select>

    <update id="activateProduct" parameterType="com.project.ecommerce.form.VendorProductForm">
        UPDATE vendor_product
        SET enable = #{enable},
            updatedTime = #{updatedTime}
        WHERE productId = #{productId}
        AND vendorId = #{vendorId}
    </update>

    <select id="getAllProductMainPage" parameterType="map" resultMap="ProductResultMap" fetchSize="200">
        SELECT * FROM
            (SELECT MAX(rating) AS rating, Min(price) AS price, productId, vendorId
            FROM vendor_product
        WHERE quantity > 0 AND enable = TRUE GROUP BY productId, vendorId) vp
        INNER JOIN
        (SELECT * FROM product
        <where>
            <if test="categoryId != null">
                AND categoryId = #{categoryId}
            </if>
            <if test="subCategoryId != null">
                AND subCategoryId = #{subCategoryId}
            </if>
            <if test="keyword != null">
                AND (productName LIKE #{keyword}
                    OR SKU LIKE #{keyword})
            </if>
        </where>
        ) p ON p.id = vp.productId
#         INNER JOIN
#         (SELECT productId, content FROM image WHERE imageOrder = 1) i ON i.productId = vp.productId
        ORDER BY RAND()
        LIMIT 100
    </select>

    <update id="activateVendorProduct" parameterType="com.project.ecommerce.form.VendorProductForm">
        UPDATE vendor_product
        SET enable = #{enable},
            updatedTime = #{updatedTime}
        WHERE vendorId = #{vendorId}
    </update>

    <select id="getTop10NewestProduct" resultMap="ProductResultMap" fetchSize="200">
        SELECT * FROM
        (SELECT MAX(rating) AS rating, Min(price) AS price, productId, vendorId
        FROM vendor_product
        WHERE quantity > 0
        AND enable = TRUE
        GROUP BY productId, vendorId
        ORDER BY createdTime, updatedTime) vp
        INNER JOIN
        (SELECT id, productName, listPrice FROM product
        <where>
            <if test="categoryId != null">
                AND categoryId = #{categoryId}
            </if>
            <if test="subCategoryId != null">
                AND subCategoryId = #{subCategoryId}
            </if>
            <if test="keyword != null">
                AND (productName LIKE #{keyword}
                OR SKU LIKE #{keyword})
            </if>
        </where>
        ) p ON p.id = vp.productId
#         INNER JOIN
#         (SELECT productId, content FROM image WHERE imageOrder = 1) i ON i.productId = vp.productId
        ORDER BY RAND()
        LIMIT 10
    </select>

    <update id="saveRating">
        UPDATE vendor_product
        SET rating = #{rating}
        WHERE productId = #{productId}
          AND vendorId = #{vendorId}
    </update>
</mapper>