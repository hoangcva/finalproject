<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.ecommerce.dao.ProductMapper">
    <resultMap id="ProductResultMap" type="com.project.ecommerce.form.ProductForm">
        <id property="productId" column="id" />
        <result property="productName" column="product_name"/>
        <result property="description" column="product_description"/>
        <result property="brand" column="product_brand"/>
        <result property="SKU" column="product_SKU"/>
        <result property="size" column="size"/>
        <result property="color" column="product_color"/>
        <result property="subjectAge" column="product_subjectAge"/>
        <result property="material" column="product_material"/>
        <result property="categoryId" column="categoryId"/>
        <result property="subCategoryId" column="subCategoryId"/>
        <result property="vendorId" column="vendorId"/>
        <result property="quantity" column="product_quantity"/>
        <result property="price" column="product_price"/>
        <result property="rating" column="product_rating"/>
        <result property="createdBy" column="createdBy"/>
        <result property="origin" column="product_origin"/>
        <result property="vendorName" column="vendor_name"/>
        <result property="listPrice" column="list_price"/>
        <result property="model" column="model"/>
        <result property="type" column="type"/>
        <result property="framePerSecond" column="framePerSecond"/>
        <result property="weight" column="weight"/>
        <result property="connectionPorts" column="connectionPorts"/>
        <result property="voltage" column="voltage"/>
        <result property="capacity" column="capacity"/>
        <result property="power" column="power"/>
        <result property="author" column="author"/>
        <result property="releaseDate" column="releaseDate"/>
        <result property="numberOfPages" column="numberOfPages"/>
        <result property="language" column="language"/>
        <result property="publisher" column="publisher"/>
    </resultMap>

    <resultMap id="VendorResultMap" type="com.project.ecommerce.form.VendorProductForm">
        <result property="vendorId" column="vendorId"/>
        <result property="productId" column="productId"/>
        <result property="quantity" column="product_quantity"/>
        <result property="price" column="product_price"/>
        <result property="rating" column="product_rating"/>
        <result property="fullName" column="vendor_name"/>
    </resultMap>

    <insert id="insertProduct" parameterType="com.project.ecommerce.dto.ProductDto" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO product
        ( product_name, product_description, categoryId, subCategoryId, product_brand,
         product_SKU,product_origin, createdBy, list_price)
        VALUES
        (#{productName,jdbcType=VARCHAR},
         #{description,jdbcType=VARCHAR},
         #{categoryId,jdbcType=INTEGER},
         #{subCategoryId,jdbcType=INTEGER},
         #{brand,jdbcType=VARCHAR},
         #{SKU,jdbcType=VARCHAR},
         #{origin,jdbcType=VARCHAR},
         #{createdBy,jdbcType=BIGINT},
         #{listPrice,jdbcType=BIGINT});
        <selectKey keyProperty="id" resultType="long" order="AFTER">
            SELECT LAST_INSERT_ID();
        </selectKey>
    </insert>

    <insert id="insertVendorProduct" parameterType="com.project.ecommerce.dto.VendorProductDto">
        INSERT INTO vendor_product
        ( vendorId, productId, product_quantity, product_price, product_rating)
        VALUES
        (#{vendorId,jdbcType=BIGINT},
         #{productId,jdbcType=BIGINT},
         #{quantity,jdbcType=BIGINT},
         #{price,jdbcType=BIGINT},
         #{rating,jdbcType=INTEGER});
    </insert>

    <select id="getAllProductByVendorId" resultMap="ProductResultMap" fetchSize="200">
        SELECT * FROM vendor_product
        LEFT JOIN product p on vendor_product.productId = p.id
        WHERE vendorId = #{vendorId}
    </select>

    <select id="getVendorProduct" resultMap="ProductResultMap" fetchSize="200">
        SELECT * FROM vendor_product
        LEFT JOIN product p on vendor_product.productId = p.id
        WHERE productId = #{productId}
    </select>

    <update id="updateProduct" parameterType="com.project.ecommerce.form.ProductForm">
        UPDATE product
        SET product_name = #{productName},
            product_description = #{description},
            product_brand = #{brand},
            product_SKU = #{SKU},
            list_price = #{listPrice},
            categoryId = #{categoryId},
            subCategoryId = #{subCategoryId}
        WHERE id = #{productId} and createdBy = #{vendorId}
    </update>

    <update id="updateVendorProduct" parameterType="com.project.ecommerce.form.ProductForm">
        UPDATE vendor_product
        SET product_quantity = #{quantity},
            product_price = #{price}
        WHERE productId = #{productId};
    </update>

    <select id="getAllProduct" parameterType="map" resultMap="ProductResultMap" fetchSize="200">
        SELECT * FROM product p
        INNER JOIN
            ( SELECT *
              FROM vendor_product
              WHERE product_quantity > 0
              ORDER BY product_rating DESC, product_price ASC
            ) vp ON p.id = vp.productId
        <where>
            <if test="categoryId != null">
                AND categoryId = #{categoryId}
            </if>
            <if test="subCategoryId != null">
                AND subCategoryId = #{subCategoryId}
            </if>
            <if test="keyword != null">
                AND product_name LIKE #{keyword}
            </if>
        </where>
        ORDER BY RAND()
        LIMIT 100
    </select>

    <select id="getProductDetail" resultMap="ProductResultMap" fetchSize="200">
        SELECT * FROM
            (SELECT p.id, p.product_name, p.product_brand, p.product_description, p.product_origin, p.product_SKU,
                    p.categoryId, p.subCategoryId, p.createdBy, p.list_price,
                    vp.vendorId, vp.product_quantity, vp.product_price, vp.product_rating
             FROM  product p
                INNER JOIN vendor_product vp
                    ON p.id = vp.productId
             WHERE p.id = #{productId}
               AND vp.vendorId = #{vendorId} ) t1
        LEFT JOIN
                (SELECT vendor_name, id FROM vendor_info) t2
                 ON t1.vendorId = t2.id;
#         LEFT JOIN
#                 (SELECT size, material, color, productId FROM category1_fashion_detail) c1
#                 ON c1.productId = t1.id
#         LEFT JOIN
#                 (SELECT model, type, framePerSecond, weight, size, voltage, productId FROM category2_sub1_tivi_detail) c2
#                 ON c2.productId = t1.id
#         LEFT JOIN
#                 (SELECT productId, model, capacity, power, voltage FROM category2_sub2_cooker_detail) c3
#                 ON c3.productId = t1.id
#         LEFT JOIN
#                 (SELECT size, model, voltage, capacity, productId FROM category2_sub3_fridge_detail) c4
#                 ON c4.productId = t1.id
#         LEFT JOIN
#                 (SELECT author, releaseDate, numberOfPages, language, publisher, productId FROM category3_book_detail) c5
#                 ON c5.productId = t1.id
    </select>

    <select id="getVendorListByProduct" resultMap="VendorResultMap" fetchSize="200">
        SELECT vendorId, productId, product_quantity, product_price, product_rating, vendor_name FROM vendor_product vp
        INNER JOIN vendor_info vi ON vp.vendorId = vi.id
        WHERE productId = #{productId}
    </select>

    <insert id="saveProductImage" parameterType="com.project.ecommerce.dto.ProductImageDto" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO image
        ( name, productId, content, imageOrder)
        VALUES
        (#{name,jdbcType=VARCHAR},
         #{productId,jdbcType=BIGINT},
         #{content,jdbcType=BLOB},
         #{imageOrder,jdbcType=TINYINT});
    </insert>
    
    <select id="getProductImage" fetchSize="200" resultType="com.project.ecommerce.dto.ProductImageDto">
        SELECT * FROM image
        WHERE productId = #{productId}
        ORDER BY imageOrder
    </select>

    <update id="updateProductImage" parameterType="com.project.ecommerce.dto.ProductImageDto">
        UPDATE image
        SET name = #{name},
            content = #{content}
        WHERE id = #{id};
    </update>
    <delete id="removeProductImage">
        DELETE FROM image
        WHERE productId = #{productId}
            AND imageOrder = #{imageOrder}
    </delete>
    <update id="updateProductQuantity">
        UPDATE vendor_product
        SET product_quantity = #{quantity}
        WHERE productId = #{productId}
        AND vendorId = #{vendorId}
    </update>

    <select id="getCountries" resultType="com.project.ecommerce.dto.CountriesDto">
        SELECT * FROM countries ORDER BY name
    </select>

    <insert id="insertDetailCategory1" parameterType="com.project.ecommerce.form.ProductForm" useGeneratedKeys="true" keyColumn="id">
        INSERT INTO category1_fashion_detail
            (productid, size, material, color)
        VALUES
        (#{productId,jdbcType=BIGINT},
         #{size,jdbcType=VARCHAR},
         #{material,jdbcType=VARCHAR},
         #{color,jdbcType=VARCHAR});
    </insert>

    <insert id="insertDetailCategory2Sub1" parameterType="com.project.ecommerce.form.ProductForm" useGeneratedKeys="true" keyColumn="id">
        INSERT INTO category2_sub1_tivi_detail
            (productid, model, type, framepersecond, weight, connectionports, size, voltage)
        VALUES
        (#{productId,jdbcType=BIGINT},
         #{model,jdbcType=VARCHAR},
         #{type,jdbcType=VARCHAR},
         #{framepersecond,jdbcType=VARCHAR},
         #{weight,jdbcType=VARCHAR},
         #{connectionports,jdbcType=VARCHAR},
         #{size,jdbcType=VARCHAR},
         #{voltage,jdbcType=VARCHAR});
    </insert>

    <insert id="insertDetailCategory2Sub2" parameterType="com.project.ecommerce.form.ProductForm" useGeneratedKeys="true" keyColumn="id">
        INSERT INTO category2_sub2_cooker_detail
        (productId, model, capacity, power, voltage)
        VALUES
        (#{productId,jdbcType=BIGINT},
         #{model,jdbcType=VARCHAR},
         #{capacity,jdbcType=VARCHAR},
         #{power,jdbcType=VARCHAR},
         #{voltage,jdbcType=VARCHAR});
    </insert>

    <insert id="insertDetailCategory2Sub3" parameterType="com.project.ecommerce.form.ProductForm" useGeneratedKeys="true" keyColumn="id">
        INSERT INTO category2_sub3_fridge_detail
        (productId, model, capacity, size, voltage)
        VALUES
        (#{productId,jdbcType=BIGINT},
         #{model,jdbcType=VARCHAR},
         #{capacity,jdbcType=VARCHAR},
         #{size,jdbcType=VARCHAR},
         #{voltage,jdbcType=VARCHAR});
    </insert>

    <insert id="insertDetailCategory3" parameterType="com.project.ecommerce.form.ProductForm" useGeneratedKeys="true" keyColumn="id">
        INSERT INTO category3_book_detail
            (productId, author, releaseDate, numberOfPages, language, publisher)
        VALUES
        (#{productId,jdbcType=BIGINT},
         #{author,jdbcType=VARCHAR},
         #{releaseDate,jdbcType=DATE},
         #{numberOfPages,jdbcType=INTEGER},
         #{language,jdbcType=VARCHAR},
         #{publisher,jdbcType=VARCHAR});
    </insert>

    <select id="getProductDetailBaseOnCategory" resultMap="ProductResultMap" parameterType="com.project.ecommerce.form.ProductForm">
        <if test="categoryId == 1">
            SELECT * FROM category1_fashion_detail
        </if>
        <if test="categoryId == 2 and subCategoryId == 1">
            SELECT * FROM category2_sub1_tivi_detail
        </if>
        <if test="categoryId == 2 and subCategoryId == 2">
            SELECT * FROM category2_sub2_cooker_detail
        </if>
        <if test="categoryId == 2 and subCategoryId == 3">
            SELECT * FROM category2_sub3_fridge_detail
        </if>
        <if test="categoryId == 3">
            SELECT * FROM category3_book_detail
        </if>
        WHERE productId = #{productId}
    </select>
</mapper>